Diagnostic de lâ€™Appendicite PÃ©diatrique


   1. Vue dâ€™ensemble
Ce projet vise Ã  diagnostiquer lâ€™appendicite pÃ©diatrique Ã  lâ€™aide de modÃ¨les de machine learning. Le flux de travail comprend :

âœ” Nettoyage et prÃ©traitement des donnÃ©es (gestion des valeurs manquantes, des valeurs aberrantes et des corrÃ©lations).
âœ” SÃ©lection des caractÃ©ristiques pour conserver les attributs mÃ©dicaux les plus pertinents.
âœ” EntraÃ®nement et Ã©valuation des modÃ¨les de ML pour dÃ©terminer le plus performant.
âœ” DÃ©ploiement dâ€™une application web permettant aux professionnels de santÃ© dâ€™entrer des donnÃ©es patients et dâ€™obtenir des prÃ©dictions.
âœ” InterprÃ©tation des rÃ©sultats avec SHAP pour expliquer les dÃ©cisions du modÃ¨le.
âœ” Optimisation de la mÃ©moire pour amÃ©liorer les performances.


   2. Structure du Projet

Pediatric-Appendicitis-Diagnosis
â”‚â”€â”€ application
â”‚   â”œâ”€â”€ appendicitis_diagnosis_app.py   # Interface de l'application web
â”‚   â”œâ”€â”€ force_plot.png                  # Visualisation SHAP (force plot)
â”‚   â”œâ”€â”€ model_interpretation.py         # Analyse explicative basÃ©e sur SHAP
â”‚
â”‚â”€â”€ clean-data
â”‚   â”œâ”€â”€ cleaning_data.ipynb              # Notebook de nettoyage des donnÃ©es
â”‚
â”‚â”€â”€ data                                 # DonnÃ©es brutes et nettoyÃ©es
â”‚
â”‚â”€â”€ Machine_learning
â”‚   â”œâ”€â”€ Training.py                      # Script d'entraÃ®nement des modÃ¨les
â”‚   â”œâ”€â”€ best_model.py                    # ModÃ¨le LightGBM optimisÃ©
â”‚
â”‚â”€â”€ Optimizing Memory Usage
â”‚   â”œâ”€â”€ data_processing.py               # Fonctions d'optimisation mÃ©moire
â”‚   â”œâ”€â”€ test_memory_optimization.py      # Tests d'optimisation mÃ©moire
â”‚
â”‚â”€â”€ .gitignore
â”‚â”€â”€ README.md.txt                        # Documentation



   3. PrÃ©traitement des DonnÃ©es
Gestion des Valeurs Manquantes
âœ” Les valeurs manquantes ont Ã©tÃ© remplies avec des techniques dâ€™imputation appropriÃ©es (moyenne des donnÃ©es des patients de meme age et meme taille).
âœ” Les colonnes ayant plus de 80 % de valeurs manquantes ont Ã©tÃ© supprimÃ©es pour garantir la fiabilitÃ© du modÃ¨le.
âœ” Les caractÃ©ristiques redondantes (ex. Poids vs. IMC) ont Ã©tÃ© supprimÃ©es pour Ã©viter la multi-colinÃ©aritÃ©.

Gestion des Valeurs Aberrantes et des CorrÃ©lations
âœ” Les valeurs aberrantes ont Ã©tÃ© dÃ©tectÃ©es et traitÃ©es Ã  lâ€™aide de mÃ©thodes statistiques.
âœ” Les caractÃ©ristiques fortement corrÃ©lÃ©es ont Ã©tÃ© identifiÃ©es et une seule de chaque paire corrÃ©lÃ©e a Ã©tÃ© conservÃ©e (exemple BMI = Height/Weight).


   4. ModÃ¨les de Machine Learning
Trois modÃ¨les ont Ã©tÃ© entraÃ®nÃ©s et Ã©valuÃ©s pour sÃ©lectionner le meilleur :

| ModÃ¨le                   | PrÃ©cision | Recall  | F1-score | AUC-ROC |
|--------------------------|-----------|---------|----------|---------|
|     SVM                  | 0.9236    | 0.9236  | 0.9231   | 0.9795  |
|   Random Forest          | 0.9363    | 0.9363  | 0.9355   | 0.9939  |
| LightGBM(modÃ¨le choisi)  | 0.9618    | 0.9618  | 0.9618   | 0.9777  |


âœ” LightGBM a obtenu les meilleures performances, ce qui en fait le modÃ¨le sÃ©lectionnÃ© pour le dÃ©ploiement.


   5. Ã‰valuation du ModÃ¨le & Analyse SHAP
MÃ©triques de Performance
Le meilleur modÃ¨le a Ã©tÃ© choisi en fonction de :
âœ” PrÃ©cision, Recall et F1-score pour mesurer la qualitÃ© des prÃ©dictions.
âœ” AUC-ROC pour Ã©valuer la capacitÃ© du modÃ¨le Ã  distinguer les cas positifs et nÃ©gatifs.

SHAP (SHapley Additive exPlanations)
âœ” Lâ€™analyse SHAP a permis dâ€™interprÃ©ter les dÃ©cisions du modÃ¨le.
âœ” Les caractÃ©ristiques cliniques les plus influentes dans le diagnostic de lâ€™appendicite sont :

Localisation de la douleur abdominale
Nombre de globules blancs (WBC)
PrÃ©sence de fiÃ¨vre
SensibilitÃ© Ã  la palpation (Rebond abdominal)
âœ” Une visualisation en force plot a Ã©tÃ© gÃ©nÃ©rÃ©e pour illustrer lâ€™impact de chaque caractÃ©ristique sur la prÃ©diction.


   6. Application Web
Une interface intuitive a Ã©tÃ© dÃ©veloppÃ©e avec Streamlit (ou Flask) pour permettre aux mÃ©decins de :
âœ” Saisir les symptÃ´mes et rÃ©sultats dâ€™examens dâ€™un patient.
âœ” Obtenir une prÃ©diction instantanÃ©e du risque dâ€™appendicite.
âœ” Comprendre la dÃ©cision du modÃ¨le grÃ¢ce Ã  une analyse SHAP dÃ©taillÃ©e.

   7. Optimisation de la MÃ©moire & Prompt Engineering
âœ” Des techniques de prompt engineering ont Ã©tÃ© appliquÃ©es pour amÃ©liorer le traitement des donnÃ©es et optimiser la mÃ©moire.
âœ” Le module data_processing.py a Ã©tÃ© conÃ§u pour rÃ©duire la consommation mÃ©moire lors du chargement des donnÃ©es mÃ©dicales.
âœ” Les types de donnÃ©es ont Ã©tÃ© convertis (float64 â†’ float32, int64 â†’ int32) pour minimiser lâ€™empreinte mÃ©moire sans perte de prÃ©cision.

   8. Principaux RÃ©sultats
a. L'ensemble de donnÃ©es Ã©tait-il Ã©quilibrÃ© ?
Oui, il Ã©tait approximativement Ã©quilibrÃ© (~50 % appendicite, ~50 % non-appendicite).

b. Quel modÃ¨le de ML a donnÃ© les meilleures performances ?
LightGBM a obtenu les meilleurs scores en termes de prÃ©cision et de robustesse.

c. Quelles caractÃ©ristiques cliniques influencent le plus le diagnostic ?
Lâ€™analyse SHAP a rÃ©vÃ©lÃ© que la localisation de la douleur, le WBC, la fiÃ¨vre et la sensibilitÃ© abdominale sont les principaux indicateurs.

d. Apports du Prompt Engineering ?
Une approche structurÃ©e des prompts a permis dâ€™amÃ©liorer lâ€™efficacitÃ© des fonctions de traitement des donnÃ©es et de mÃ©moire.


   9. AmÃ©liorations Futures
ğŸ”¹ Enrichir le jeu de donnÃ©es avec des caractÃ©ristiques supplÃ©mentaires pour une meilleure gÃ©nÃ©ralisation.
ğŸ”¹ AmÃ©liorer lâ€™explicabilitÃ© du modÃ¨le pour faciliter son adoption par les professionnels de santÃ©.
ğŸ”¹ DÃ©ployer lâ€™application web dans des hÃ´pitaux et cliniques pour des tests en conditions rÃ©elles.